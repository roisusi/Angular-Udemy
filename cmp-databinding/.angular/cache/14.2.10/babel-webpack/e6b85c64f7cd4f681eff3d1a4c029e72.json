{"ast":null,"code":"import { EventEmitter, ElementRef } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"serverContentInput\"];\nexport let CockpitComponent = /*#__PURE__*/(() => {\n  class CockpitComponent {\n    constructor() {\n      this.serverCreated = new EventEmitter();\n      this.bluePrintCreated = new EventEmitter();\n    }\n\n    ngOnInit() {}\n\n    onAddServer(serverInput) {\n      this.serverCreated.emit({\n        serverName: serverInput.value,\n        serverContent: this.serverContentInput.nativeElement.value\n      });\n    }\n\n    onAddBluePrint(bluePrintInput) {\n      this.bluePrintCreated.emit({\n        serverName: bluePrintInput.value,\n        serverContent: this.serverContentInput.nativeElement.value\n      });\n    }\n\n  }\n\n  CockpitComponent.ɵfac = function CockpitComponent_Factory(t) {\n    return new (t || CockpitComponent)();\n  };\n\n  CockpitComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CockpitComponent,\n    selectors: [[\"app-cockpit\"]],\n    viewQuery: function CockpitComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.serverContentInput = _t.first);\n      }\n    },\n    outputs: {\n      serverCreated: \"serverCreated\",\n      bluePrintCreated: \"bluePrintCreated\"\n    },\n    decls: 18,\n    vars: 0,\n    consts: [[1, \"row\"], [1, \"col-xs-12\"], [\"type\", \"text\", 1, \"form-control\"], [\"serverNameInput\", \"\"], [\"bluePrintInput\", \"\", \"serverContentInput\", \"\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function CockpitComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"p\");\n        i0.ɵɵtext(3, \"Add new Servers or blueprints!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"label\");\n        i0.ɵɵtext(5, \"Server Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 2, 3);\n        i0.ɵɵelementStart(8, \"label\");\n        i0.ɵɵtext(9, \"Server Content\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 2, 4)(13, \"br\");\n        i0.ɵɵelementStart(14, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function CockpitComponent_Template_button_click_14_listener() {\n          i0.ɵɵrestoreView(_r3);\n\n          const _r0 = i0.ɵɵreference(7);\n\n          return i0.ɵɵresetView(ctx.onAddServer(_r0));\n        });\n        i0.ɵɵtext(15, \" Add Server \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function CockpitComponent_Template_button_click_16_listener() {\n          i0.ɵɵrestoreView(_r3);\n\n          const _r1 = i0.ɵɵreference(11);\n\n          return i0.ɵɵresetView(ctx.onAddBluePrint(_r1));\n        });\n        i0.ɵɵtext(17, \" Add Server Blueprint \");\n        i0.ɵɵelementEnd()()();\n      }\n    }\n  });\n  return CockpitComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}